# =========================================================
# PHASE 2: HTTPS CONFIGURATION (DNS CONFIGURED + SSL ENABLED)
# =========================================================
#
# USE THIS CONFIGURATION WHEN:
# - DNS is properly pointing to your server (zohaib.no → 18.223.101.101)
# - SSL certificates are installed and working
# - Site is accessible via https://zohaib.no
#
# DO NOT USE THIS CONFIGURATION IF:
# - DNS is not configured yet
# - SSL certificates are not installed
# - You're still accessing via IP address only
# =========================================================

# Django Settings
# =========================================================

# CRITICAL: Use the SAME SECRET_KEY from Phase 1
# DO NOT generate a new key - users will be logged out!
# If you don't have it, generate new one:
# python3 -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY=REPLACE_THIS_WITH_SAME_SECRET_KEY_FROM_PHASE1

# Keep DEBUG False in production
DEBUG=False

# Allow access from domain and IP address
ALLOWED_HOSTS=zohaib.no,www.zohaib.no,18.223.101.101

# Database Configuration
# =========================================================
# Using SQLite (default) - no DATABASE_URL needed
# If you want to use PostgreSQL, uncomment and configure:
# DATABASE_URL=postgresql://username:password@localhost/dbname

# External API Configuration
# =========================================================
# Statens Vegvesen (Norwegian Vehicle Authority) API Key
STATENS_VEGVESEN_API_KEY=fea6488c-bf34-4326-8b83-d1cb5e25d810

# Security Settings - FULL SECURITY ENABLED
# =========================================================
# These settings enforce HTTPS and secure cookies
# Only enable these after DNS and SSL are working!

# Trust HTTPS origins for your domain
CSRF_TRUSTED_ORIGINS=https://zohaib.no,https://www.zohaib.no

# Redirect all HTTP requests to HTTPS
SECURE_SSL_REDIRECT=True

# Only send session cookies over HTTPS
SESSION_COOKIE_SECURE=True

# Only send CSRF cookies over HTTPS
CSRF_COOKIE_SECURE=True

# Additional Security Settings (Recommended)
# =========================================================
# Uncomment these for enhanced security

# Force browsers to use HTTPS for 1 year (31536000 seconds)
# SECURE_HSTS_SECONDS=31536000

# Include all subdomains in HSTS policy
# SECURE_HSTS_INCLUDE_SUBDOMAINS=True

# Submit domain to browser HSTS preload lists
# SECURE_HSTS_PRELOAD=True

# Prevent MIME type sniffing
# SECURE_CONTENT_TYPE_NOSNIFF=True

# Prevent browser from rendering page in frame/iframe
# X_FRAME_OPTIONS=DENY

# Email Configuration (Optional)
# =========================================================
# Uncomment and configure if you want Django to send error emails
# Recommended for production monitoring

# EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
# EMAIL_HOST=smtp.gmail.com
# EMAIL_PORT=587
# EMAIL_USE_TLS=True
# EMAIL_HOST_USER=your-email@gmail.com
# EMAIL_HOST_PASSWORD=your-gmail-app-password
# DEFAULT_FROM_EMAIL=noreply@zohaib.no
# ADMINS=admin@zohaib.no

# Logging Configuration (Optional)
# =========================================================
# Uncomment to enable detailed logging

# LOGGING_LEVEL=INFO
# LOGGING_FILE=/var/log/django/app.log

# =========================================================
# DEPLOYMENT INSTRUCTIONS
# =========================================================
#
# PREREQUISITES:
# - Phase 1 configuration must be working (HTTP access via IP)
# - DNS must be configured and propagated
# - SSL certificate must be installed and working
#
# VERIFICATION BEFORE DEPLOYING:
# 1. Verify DNS is working:
#    nslookup zohaib.no
#    (Should return: 18.223.101.101)
#
# 2. Verify SSL is working:
#    curl https://zohaib.no
#    (Should return HTML without SSL errors)
#
# 3. Check certificate validity:
#    sudo certbot certificates
#    (Should show valid certificate for zohaib.no)
#
# DEPLOYMENT STEPS:
# 1. Copy Phase 1 .env to backup:
#    sudo cp /home/deploy/shadcoding-task1/backend/.env \
#           /home/deploy/shadcoding-task1/backend/.env.phase1.backup
#
# 2. Get the SECRET_KEY from Phase 1 .env:
#    sudo grep SECRET_KEY /home/deploy/shadcoding-task1/backend/.env
#
# 3. Update SECRET_KEY in this file with the SAME value from Phase 1
#
# 4. Copy this file to your server:
#    scp deployment/.env.phase2-https ubuntu@18.223.101.101:/tmp/
#
# 5. On the server, move it to the correct location:
#    sudo mv /tmp/.env.phase2-https /home/deploy/shadcoding-task1/backend/.env
#    sudo chown deploy:deploy /home/deploy/shadcoding-task1/backend/.env
#    sudo chmod 600 /home/deploy/shadcoding-task1/backend/.env
#
# 6. Restart Gunicorn:
#    sudo systemctl restart gunicorn
#
# 7. Verify it's working:
#    sudo systemctl status gunicorn
#    curl https://zohaib.no/api/projects/
#
# 8. Test HTTP → HTTPS redirect:
#    curl -I http://zohaib.no
#    (Should return 301/302 redirect to https://)
#
# 9. Access your site:
#    https://zohaib.no
#
# ROLLBACK (if something goes wrong):
#    sudo cp /home/deploy/shadcoding-task1/backend/.env.phase1.backup \
#           /home/deploy/shadcoding-task1/backend/.env
#    sudo systemctl restart gunicorn
#
# =========================================================
# IMPORTANT SECURITY NOTES
# =========================================================
#
# 1. SECRET_KEY:
#    - NEVER share this key
#    - NEVER commit it to Git
#    - Use the SAME key across deployments
#    - Changing it will log out all users
#
# 2. HTTPS Enforcement:
#    - With SECURE_SSL_REDIRECT=True, all HTTP requests redirect to HTTPS
#    - Ensure SSL certificate is valid before enabling
#    - Test thoroughly after enabling
#
# 3. Cookie Security:
#    - Secure cookies only work over HTTPS
#    - Users accessing via HTTP will not be able to authenticate
#    - Always access via https://zohaib.no, not http://
#
# 4. HSTS (HTTP Strict Transport Security):
#    - Once enabled, browsers will ONLY access site via HTTPS
#    - Cannot be easily disabled (browsers cache HSTS for specified duration)
#    - Only enable HSTS after confirming HTTPS works perfectly
#
# 5. File Permissions:
#    - .env file should be owned by deploy:deploy
#    - .env file should have 600 permissions (read/write for owner only)
#    - Never make .env world-readable
#
# =========================================================
# MONITORING AND MAINTENANCE
# =========================================================
#
# 1. Monitor SSL Certificate Expiration:
#    sudo certbot certificates
#    (Let's Encrypt certificates expire every 90 days)
#    (Certbot auto-renewal should handle this)
#
# 2. Check Auto-Renewal:
#    sudo systemctl status certbot.timer
#    sudo certbot renew --dry-run
#
# 3. Monitor Application Logs:
#    sudo journalctl -u gunicorn -f
#    sudo tail -f /var/log/nginx/error.log
#
# 4. Regular Security Updates:
#    sudo apt update && sudo apt upgrade
#
# 5. Database Backups:
#    Regularly backup /home/deploy/shadcoding-task1/backend/db.sqlite3
#
# =========================================================
